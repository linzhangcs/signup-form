{"version":3,"sources":["images/bg-intro-desktop.png","images/bg-intro-mobile.png","images/icon-error.svg","styles/global.js","styles/elements.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","colors","setting","Body","styled","div","desktopBg","mobileBg","Container","Headlines","SignupForm","errorIcon","Button","button","Banner","Form","useState","firstName","lastName","email","password","validated","errors","formInput","setFormInput","validEmailRegex","RegExp","handleChange","e","target","name","value","length","test","onSubmit","preventDefault","console","log","className","type","placeholder","onChange","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.44b36f2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg-intro-desktop.eb8c9c16.png\";","module.exports = __webpack_public_path__ + \"static/media/bg-intro-mobile.3e78c71a.png\";","module.exports = __webpack_public_path__ + \"static/media/icon-error.eb2c6ce2.svg\";","export const colors = {\n    white: \"#fffdff\",\n    primaryRed: \"rgba(255, 121, 120, 0.99)\",\n    primaryGreen: \"hsl(154, 59%, 51%)\",\n    accentBlue: \"hsl(248, 32%, 49%)\",\n    neutralDarkBlue: \"hsl(249, 10%, 26%)\",\n    neutralGrayishBlue: \"hsl(246, 25%, 77%)\",\n    grayishBlue: \"rgba(185, 182, 211, 0.6)\",\n    purpleBlue: \"rgba(62, 60, 73, 0.25)\",\n    textGray: \"#727274\",\n    textLightGray: \"#bab8c3\",\n    textDarkGray: \"#37363c\"\n};\n\nexport const setting  = {\n    mobile: \"375px\",\n    desktop: \"1440px\",\n    tablet: \"768px\",\n    fontSize: \"16px\"\n};","import styled from 'styled-components';\n\nimport desktopBg from '../images/bg-intro-desktop.png';\nimport mobileBg from '../images/bg-intro-mobile.png';\nimport errorIcon from '../images/icon-error.svg';\n\nimport {colors, setting} from './global.js'\n\nexport const Body = styled.div`\nfont-family: 'Poppins', sans-serif;\nbackground:  url(${desktopBg}), linear-gradient(${colors.primaryRed}, ${colors.primaryRed});\nheight: 100%;\n\n@media (max-width: ${setting.mobile}){\n    background:  url(${mobileBg}), linear-gradient(${colors.primaryRed}, ${colors.primaryRed});\n    padding-bottom: 12%;\n}\n`;\nexport const Container = styled.div`\nwidth: 100%;\nheight: 100vh;\nmargin: 0 auto;\ncolor: ${colors.white};\ndisplay: flex;\nflex-direction: row;\njustify-content: center;\nalign-items: center;\n@media (max-width: ${setting.mobile}){\n    flex-direction: column;\n    height: 100%;\n}\n@media (max-width: ${setting.tablet}){\n    flex-direction: column;\n}\n`;\n\nexport const Headlines = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nmargin-right: 60px;\nmax-width: 510px;\nflex-basis: 50%;\nfont-weight: 500;\nh3{\n  font-size: 3em;\n  font-weight: 700;\n  line-height: 1.2;\n  margin: 15px 0;\n}\n@media (max-width: ${setting.mobile}){\n    max-width: 326px;\n    text-align: center;\n    margin-right: 0;\n    margin-top: 20%;\n    margin-bottom: 13%;\n    h3{\n        font-size: 1.7em;\n      }      \n}\n@media (max-width: ${setting.tablet}){\n    margin-right: 0;\n    flex-basis: 30%;\n}\n`;\n\nexport const SignupForm = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nflex-basis: 50%;\nmax-width: 540px;\n@media (max-width: ${setting.mobile}){\n    max-width: 326px;\n}\n\nform{\n  box-sizing: border-box;\n  width: 100%;\n  padding 40px;\n  margin: 25px 0;\n  border-radius: 10px;\n  background: #fff;\n  box-shadow: 0px 8px 1px  ${colors.purpleBlue};\n  @media (max-width: ${setting.mobile}){\n      padding: 20px;\n  }\n\n}\n.inputs{\n    clear: both;\n    margin-bottom: 20px;\n}\ninput{\n  font-family: 'Poppins', sans-serif;\n  box-sizing: border-box;\n  width: 100%;\n  font-size: 0.9em;\n  font-weight: 500;\n  padding: 15px 20px;\n  border: 1px solid ${colors.grayishBlue};\n  border-radius: 5px;\n  outline: none;\n  transition: border 0.5s ease;\n}\n\ninput:focus{\n  color: ${colors.textDarkGray};\n  border: 1px solid ${colors.neutralDarkBlue};\n}\n\ninput.error{\n    color: ${colors.primaryRed};\n    border: 2px solid ${colors.primaryRed};\n    background-image: url(${errorIcon});\n    background-repeat: no-repeat;\n    background-position: 97%;\n}\n\n.error-text{\n    display:block;\n    font-size: 0.7em;\n    font-style: italic;\n    font-weight: 500;\n    color: ${colors.primaryRed};\n    float: right;\n    margin: 10px 0 20px;\n}\n\n.disclaimer{\n  width: 100%;\n  display: inline-block;\n  margin-top: 12px;\n  text-align: center;\n  color: ${colors.textLightGray};\n  font-size: 0.7em;\n  font-weight: 500;\n}\n\n.bold-red{\n  font-weight: 700;\n  color: ${colors.primaryRed};\n}\n`;\n\nexport const Button = styled.button`\ncolor: #fff;\nfont-family: 'Poppins', sans-serif;\nfont-size: 1em;\nfont-weight: 700;\ntext-transform: uppercase;\noutline: none;\ncursor: pointer;\nwidth: 100%;\npadding: 20px 0;\nbackground-color: ${colors.primaryGreen};\nborder: 1px solid ${colors.primaryGreen};\nborder-radius: 5px;\nbox-shadow: inset 0 -2px 3px ${colors.purpleBlue};\n`;\nexport const Banner = styled.div`\nwidth: 100%;\ntext-align:center;\nborder-radius: 12px;\nbox-shadow: 0px 8px 1px  ${colors.purpleBlue};\nbackground-color: ${colors.accentBlue};\n@media (max-width: ${setting.mobile}){\n  p{\n      margin: 20px auto;\n      max-width: 200px;\n  }  \n}\n\n.bold{\n  font-weight: 700;\n}\n`;","import React, { useState } from 'react';\nimport { Body, Container, Headlines, SignupForm, Button, Banner } from './styles/elements.js';\n\nfunction Form(){\n  const [formInput, setFormInput] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    validated: false,\n    errors:{\n        firstName: 'First name cannot be empty',\n        lastName: 'Last name cannot be empty',\n        email: 'Looks like this is not an email',\n        password: 'Password cannot be empty'\n      }\n  });\n  \n  const validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\n  const handleChange = e => {\n    const {name, value} = e.target;\n    let errors = formInput.errors;\n\n    switch(name){\n      case \"firstName\":\n        errors.firstName = value.length === 0 ? 'First name cannot be empty' : '';\n        break;\n      case \"lastName\":\n        errors.lastName  = value.length === 0 ? 'Last name cannot be empty' : '';\n        break;\n      case \"password\":\n        errors.password = value.length === 0 ? 'Password cannot be empty' : '';\n        break;\n      case \"email\":\n        errors.email = validEmailRegex.test(value) ? '': 'Looks like this is not an email';\n        break;\n      default:\n        break;\n    }\n    setFormInput({...formInput, [name]: value, errors: errors});\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setFormInput({...formInput, validated: true});\n    console.log(\"submitted\", formInput);\n  }\n  return(\n    <form onSubmit={handleSubmit}>\n      <div className=\"inputs\">\n        <input type=\"text\" className={formInput.errors.firstName.length > 0 && formInput.validated ? \"error\": ''} placeholder=\"First Name\" name=\"firstName\" \n        onChange={handleChange} value={formInput.firstName}></input>\n        {formInput.errors.firstName.length > 0 && formInput.validated &&\n        <span className=\"error-text\">{formInput.errors.firstName}</span>}\n      </div>\n      <div className=\"inputs\">\n        <input type=\"text\" className={formInput.errors.lastName.length > 0 && formInput.validated ? \"error\": ''} placeholder=\"Last Name\" name=\"lastName\" \n        onChange={handleChange} value={formInput.lastName}></input>\n        {formInput.errors.lastName.length > 0 && formInput.validated &&\n        <span className=\"error-text\">{formInput.errors.lastName}</span>}\n      </div>\n      <div className=\"inputs\">\n        <input placeholder=\"Email Address\" className={formInput.errors.email.length > 0 && formInput.validated ? \"error\": ''}  name=\"email\" \n        onChange={handleChange} value={formInput.email}></input>\n        {formInput.errors.email.length > 0 && formInput.validated &&\n          <span className=\"error-text\">{formInput.errors.email}</span>}\n      </div>\n      <div className=\"inputs\">\n        <input type=\"password\" placeholder=\"Password\" className={formInput.errors.password.length > 0 && formInput.validated ? \"error\": ''}  name=\"password\"\n        onChange={handleChange} value={formInput.password}></input>\n        {formInput.errors.password.length > 0 && formInput.validated &&\n          <span className=\"error-text\">{formInput.errors.password}</span>}\n      </div>\n\n      <Button type=\"submit\">claim your free trial</Button>\n      <span className=\"disclaimer\">By clicking the button, you are agreeing to our \n      <span className=\"bold-red\">Terms and Services</span></span>\n    </form>\n  );\n};\n\nfunction App() {\n  return (\n    <Body>\n      <Container>\n        <Headlines>\n          <h3>Learn to code by watching others</h3>\n          <p>See how experienced developers solve problems in real-time.\n            Watching scripted tutorials is great, but understanding how \n            developers think is invaluable.\n          </p>\n        </Headlines>\n        <SignupForm>\n          <Banner>\n            <p><span className=\"bold\">Try it free 7 days </span>then $20/mo. thereafter</p>\n          </Banner>\n          <Form />\n        </SignupForm>\n      </Container>\n    </Body>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}